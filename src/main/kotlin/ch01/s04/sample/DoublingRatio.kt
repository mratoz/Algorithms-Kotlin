package ch01.s04.sample

import edu.princeton.cs.algs4.StdRandom

class DoublingRatio {
    companion object {
        fun timeTrial(n: Int): Double{
            val MAX = 1_000_000
            var a: IntArray = IntArray(n)

            for (i in 0..n-1) {
                a[i] = StdRandom.uniform(-MAX, MAX)
            }

            val timer = Stopwatch()
            val cnt = TwoSumFast.count(a)
            return timer.elapsedTime()
        }
    }
}

/*
ThreeSum:
250 0.005 1.6666666666666667
500 0.025 5.0
1000 0.1 4.0
2000 0.898 8.98
4000 6.257 6.967706013363029
8000 49.815 7.961483138884449
 */

/*
ThreeSumFast:
250 0.003 0.27272727272727276
500 0.005 1.6666666666666667
1000 0.019 3.8
2000 0.061 3.210526315789474
4000 0.256 4.19672131147541
8000 1.099 4.29296875
16000 4.624 4.207461328480437
32000 19.329 4.18014705882353
 */

/*
TwoSum:
250 0.001 Infinity
500 0.002 2.0
1000 0.002 1.0
2000 0.005 2.5
4000 0.009 1.7999999999999998
8000 0.019 2.111111111111111
16000 0.075 3.9473684210526314
32000 0.303 4.04
64000 1.372 4.528052805280528
128000 4.775 3.4803206997084546
256000 19.072 3.9941361256544496
 */

/*
TwoSumFast:
250 0.0 0.0
500 0.0 NaN
1000 0.001 Infinity
2000 0.001 1.0
4000 0.001 1.0
8000 0.001 1.0
16000 0.003 3.0
32000 0.006 2.0
64000 0.011 1.8333333333333333
128000 0.023 2.090909090909091
256000 0.067 2.9130434782608696
512000 0.075 1.1194029850746268
1024000 0.14 1.866666666666667
2048000 0.229 1.6357142857142857
4096000 0.459 2.004366812227074
8192000 0.903 1.9673202614379084
16384000 1.759 1.9479512735326687
32768000 3.486 1.9818078453666859
 */

fun main(args: Array<String>) {
    var prev = DoublingRatio.timeTrial(125)
    var n = 250

    while (true){
        val time = DoublingRatio.timeTrial(n)
        println("$n $time ${time/prev}")
        n += n
        prev = time
    }
}